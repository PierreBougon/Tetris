==3868== Memcheck, a memory error detector
==3868== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3868== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==3868== Command: ./tetris
==3868== Parent PID: 2428
==3868== 
==3868== Conditional jump or move depends on uninitialised value(s)
==3868==    at 0x404F1C: my_realloc (get_nl.c:22)
==3868==    by 0x4051D7: fill_line (get_nl.c:79)
==3868==    by 0x405306: get_next_line (get_nl.c:108)
==3868==    by 0x4032ED: fill_tetri_carac (init_tetri.c:54)
==3868==    by 0x4034F7: fill_tetri (init_tetri.c:100)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868== 
==3868== Invalid read of size 1
==3868==    at 0x404F17: my_realloc (get_nl.c:22)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x403567: fill_tetri (init_tetri.c:107)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868==  Address 0x520e040 is 0 bytes inside a block of size 2 free'd
==3868==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3868==    by 0x404FB3: my_realloc (get_nl.c:33)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x403567: fill_tetri (init_tetri.c:107)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868== 
==3868== Invalid free() / delete / delete[] / realloc()
==3868==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3868==    by 0x404FB3: my_realloc (get_nl.c:33)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x403567: fill_tetri (init_tetri.c:107)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868==  Address 0x520e040 is 0 bytes inside a block of size 2 free'd
==3868==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3868==    by 0x404FB3: my_realloc (get_nl.c:33)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x403567: fill_tetri (init_tetri.c:107)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868== 
==3868== Invalid read of size 1
==3868==    at 0x404F17: my_realloc (get_nl.c:22)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x4032ED: fill_tetri_carac (init_tetri.c:54)
==3868==    by 0x4034F7: fill_tetri (init_tetri.c:100)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868==  Address 0x520e040 is 0 bytes inside a block of size 2 free'd
==3868==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3868==    by 0x404FB3: my_realloc (get_nl.c:33)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x403567: fill_tetri (init_tetri.c:107)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868== 
==3868== Invalid free() / delete / delete[] / realloc()
==3868==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3868==    by 0x404FB3: my_realloc (get_nl.c:33)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x4032ED: fill_tetri_carac (init_tetri.c:54)
==3868==    by 0x4034F7: fill_tetri (init_tetri.c:100)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868==  Address 0x520e040 is 0 bytes inside a block of size 2 free'd
==3868==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3868==    by 0x404FB3: my_realloc (get_nl.c:33)
==3868==    by 0x40526A: get_next_line (get_nl.c:96)
==3868==    by 0x403567: fill_tetri (init_tetri.c:107)
==3868==    by 0x403762: init_tetriminos (init_tetri.c:154)
==3868==    by 0x40252A: init_data (fct_main.c:15)
==3868==    by 0x402042: main (tetris.c:90)
==3868== 
==3868== Use of uninitialised value of size 8
==3868==    at 0x405C88: turn_tetri (actions.c:53)
==3868==    by 0x4064DF: get_key (key_event.c:26)
==3868==    by 0x401CAC: key_event (tetris.c:18)
==3868==    by 0x401DFC: main_loop (tetris.c:51)
==3868==    by 0x4022C9: launch_main (error.c:47)
==3868==    by 0x40238F: config (error.c:70)
==3868==    by 0x40205D: main (tetris.c:92)
==3868== 
==3868== Invalid read of size 8
==3868==    at 0x405C88: turn_tetri (actions.c:53)
==3868==    by 0x4064DF: get_key (key_event.c:26)
==3868==    by 0x401CAC: key_event (tetris.c:18)
==3868==    by 0x401DFC: main_loop (tetris.c:51)
==3868==    by 0x4022C9: launch_main (error.c:47)
==3868==    by 0x40238F: config (error.c:70)
==3868==    by 0x40205D: main (tetris.c:92)
==3868==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3868== 
==3868== 
==3868== Process terminating with default action of signal 11 (SIGSEGV)
==3868==  Access not within mapped region at address 0x0
==3868==    at 0x405C88: turn_tetri (actions.c:53)
==3868==    by 0x4064DF: get_key (key_event.c:26)
==3868==    by 0x401CAC: key_event (tetris.c:18)
==3868==    by 0x401DFC: main_loop (tetris.c:51)
==3868==    by 0x4022C9: launch_main (error.c:47)
==3868==    by 0x40238F: config (error.c:70)
==3868==    by 0x40205D: main (tetris.c:92)
==3868==  If you believe this happened as a result of a stack
==3868==  overflow in your program's main thread (unlikely but
==3868==  possible), you can try to increase the size of the
==3868==  main thread stack using the --main-stacksize= flag.
==3868==  The main thread stack size used in this run was 8388608.
==3868== 
==3868== HEAP SUMMARY:
==3868==     in use at exit: 105,028 bytes in 657 blocks
==3868==   total heap usage: 14,133 allocs, 13,482 frees, 320,224 bytes allocated
==3868== 
==3868== LEAK SUMMARY:
==3868==    definitely lost: 845 bytes in 70 blocks
==3868==    indirectly lost: 5,263 bytes in 6 blocks
==3868==      possibly lost: 1,464 bytes in 1 blocks
==3868==    still reachable: 97,456 bytes in 580 blocks
==3868==         suppressed: 0 bytes in 0 blocks
==3868== Rerun with --leak-check=full to see details of leaked memory
==3868== 
==3868== For counts of detected and suppressed errors, rerun with: -v
==3868== Use --track-origins=yes to see where uninitialised values come from
==3868== ERROR SUMMARY: 15 errors from 7 contexts (suppressed: 0 from 0)
